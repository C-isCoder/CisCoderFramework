apply plugin: 'maven'
apply plugin: 'com.android.library' // 仓库
//apply plugin: 'com.android.application'    // 测试

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    compile rootProject.ext.depend.umeng_common
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    compile rootProject.ext.depend.umeng_utdid
    //PushSDK
    compile rootProject.ext.depend.umeng_push
    //小米Push通道
    compile rootProject.ext.depend.umeng_push_xiaomi
    //华为Push通道
    compile rootProject.ext.depend.umeng_push_huawei
}
uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            snapshotRepository(url: rootProject.ext.maven.snapshot) {
                authentication(userName: rootProject.ext.maven.name,
                    password: rootProject.ext.maven.password)
            }
            repository(url: rootProject.ext.maven.repository) {
                authentication(userName: rootProject.ext.maven.name,
                    password: rootProject.ext.maven.password)
            }
            pom.project {
                version rootProject.ext.push.version
                artifactId rootProject.ext.push.artifactId
                groupId rootProject.ext.push.groupId
                packaging rootProject.ext.push.packaging
                description rootProject.ext.push.description
            }
        }
    }
}

artifacts {
    archives file(rootProject.ext.push.artifacts)
}
